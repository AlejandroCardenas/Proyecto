#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18449
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SaludOcupacional
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MOTA")]
	public partial class MotaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCLINICA(CLINICA instance);
    partial void UpdateCLINICA(CLINICA instance);
    partial void DeleteCLINICA(CLINICA instance);
    partial void InsertEstadCiv(EstadCiv instance);
    partial void UpdateEstadCiv(EstadCiv instance);
    partial void DeleteEstadCiv(EstadCiv instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertExamen(Examen instance);
    partial void UpdateExamen(Examen instance);
    partial void DeleteExamen(Examen instance);
    partial void InsertExamenReferencia(ExamenReferencia instance);
    partial void UpdateExamenReferencia(ExamenReferencia instance);
    partial void DeleteExamenReferencia(ExamenReferencia instance);
    partial void InsertPERFIL(PERFIL instance);
    partial void UpdatePERFIL(PERFIL instance);
    partial void DeletePERFIL(PERFIL instance);
    partial void InsertSexo(Sexo instance);
    partial void UpdateSexo(Sexo instance);
    partial void DeleteSexo(Sexo instance);
    partial void InsertTAlertas(TAlertas instance);
    partial void UpdateTAlertas(TAlertas instance);
    partial void DeleteTAlertas(TAlertas instance);
    partial void InsertTipo_EMO(Tipo_EMO instance);
    partial void UpdateTipo_EMO(Tipo_EMO instance);
    partial void DeleteTipo_EMO(Tipo_EMO instance);
    partial void InsertTrabajador(Trabajador instance);
    partial void UpdateTrabajador(Trabajador instance);
    partial void DeleteTrabajador(Trabajador instance);
    #endregion
		
		public MotaDataContext() : 
				base(global::SaludOcupacional.Properties.Settings.Default.MOTAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MotaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CLINICA> CLINICA
		{
			get
			{
				return this.GetTable<CLINICA>();
			}
		}
		
		public System.Data.Linq.Table<EstadCiv> EstadCiv
		{
			get
			{
				return this.GetTable<EstadCiv>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Examen> Examen
		{
			get
			{
				return this.GetTable<Examen>();
			}
		}
		
		public System.Data.Linq.Table<ExamenReferencia> ExamenReferencia
		{
			get
			{
				return this.GetTable<ExamenReferencia>();
			}
		}
		
		public System.Data.Linq.Table<PERFIL> PERFIL
		{
			get
			{
				return this.GetTable<PERFIL>();
			}
		}
		
		public System.Data.Linq.Table<Sexo> Sexo
		{
			get
			{
				return this.GetTable<Sexo>();
			}
		}
		
		public System.Data.Linq.Table<TAlertas> TAlertas
		{
			get
			{
				return this.GetTable<TAlertas>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_EMO> Tipo_EMO
		{
			get
			{
				return this.GetTable<Tipo_EMO>();
			}
		}
		
		public System.Data.Linq.Table<Trabajador> Trabajador
		{
			get
			{
				return this.GetTable<Trabajador>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLINICA")]
	public partial class CLINICA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CLINICA1;
		
		private EntitySet<Examen> _Examen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCLINICA1Changing(string value);
    partial void OnCLINICA1Changed();
    #endregion
		
		public CLINICA()
		{
			this._Examen = new EntitySet<Examen>(new Action<Examen>(this.attach_Examen), new Action<Examen>(this.detach_Examen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CLINICA", Storage="_CLINICA1", DbType="NVarChar(255)")]
		public string CLINICA1
		{
			get
			{
				return this._CLINICA1;
			}
			set
			{
				if ((this._CLINICA1 != value))
				{
					this.OnCLINICA1Changing(value);
					this.SendPropertyChanging();
					this._CLINICA1 = value;
					this.SendPropertyChanged("CLINICA1");
					this.OnCLINICA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLINICA_Examen", Storage="_Examen", ThisKey="Id", OtherKey="CLINICA")]
		public EntitySet<Examen> Examen
		{
			get
			{
				return this._Examen;
			}
			set
			{
				this._Examen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.CLINICA1 = this;
		}
		
		private void detach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.CLINICA1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadCiv")]
	public partial class EstadCiv : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEC;
		
		private string _EstadoCivil;
		
		private EntitySet<Trabajador> _Trabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdECChanging(int value);
    partial void OnIdECChanged();
    partial void OnEstadoCivilChanging(string value);
    partial void OnEstadoCivilChanged();
    #endregion
		
		public EstadCiv()
		{
			this._Trabajador = new EntitySet<Trabajador>(new Action<Trabajador>(this.attach_Trabajador), new Action<Trabajador>(this.detach_Trabajador));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEC
		{
			get
			{
				return this._IdEC;
			}
			set
			{
				if ((this._IdEC != value))
				{
					this.OnIdECChanging(value);
					this.SendPropertyChanging();
					this._IdEC = value;
					this.SendPropertyChanged("IdEC");
					this.OnIdECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoCivil", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EstadoCivil
		{
			get
			{
				return this._EstadoCivil;
			}
			set
			{
				if ((this._EstadoCivil != value))
				{
					this.OnEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._EstadoCivil = value;
					this.SendPropertyChanged("EstadoCivil");
					this.OnEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadCiv_Trabajador", Storage="_Trabajador", ThisKey="IdEC", OtherKey="EstadoCivil")]
		public EntitySet<Trabajador> Trabajador
		{
			get
			{
				return this._Trabajador;
			}
			set
			{
				this._Trabajador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trabajador(Trabajador entity)
		{
			this.SendPropertyChanging();
			entity.EstadCiv = this;
		}
		
		private void detach_Trabajador(Trabajador entity)
		{
			this.SendPropertyChanging();
			entity.EstadCiv = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstado;
		
		private string _Estado1;
		
		private EntitySet<Examen> _Examen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadoChanging(int value);
    partial void OnIdEstadoChanged();
    partial void OnEstado1Changing(string value);
    partial void OnEstado1Changed();
    #endregion
		
		public Estado()
		{
			this._Examen = new EntitySet<Examen>(new Action<Examen>(this.attach_Examen), new Action<Examen>(this.detach_Examen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Estado", Storage="_Estado1", DbType="NVarChar(255)")]
		public string Estado1
		{
			get
			{
				return this._Estado1;
			}
			set
			{
				if ((this._Estado1 != value))
				{
					this.OnEstado1Changing(value);
					this.SendPropertyChanging();
					this._Estado1 = value;
					this.SendPropertyChanged("Estado1");
					this.OnEstado1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Examen", Storage="_Examen", ThisKey="IdEstado", OtherKey="Estado")]
		public EntitySet<Examen> Examen
		{
			get
			{
				return this._Examen;
			}
			set
			{
				this._Examen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.Estado1 = this;
		}
		
		private void detach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.Estado1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Examen")]
	public partial class Examen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdExamen;
		
		private string _IdTrabajador;
		
		private System.Nullable<int> _TipoExamen;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _Estado;
		
		private string _Odontologia;
		
		private string _Presion_Arterial;
		
		private string _EKG;
		
		private string _Psicologico;
		
		private string _Esfuerzo;
		
		private System.Nullable<int> _PSA;
		
		private string _Orina;
		
		private bool _HIV;
		
		private bool _Cocaina;
		
		private bool _Marihuana;
		
		private System.Nullable<int> _Psicosensometrico;
		
		private System.Nullable<int> _Ergonometria;
		
		private System.Nullable<int> _Asceenso_a_grandes_altitudes;
		
		private System.Nullable<int> _Trabajos_de_Riesgo;
		
		private System.Nullable<int> _PERFIL;
		
		private string _RESTRICCIONES;
		
		private string _OBSERVACIONES;
		
		private System.Nullable<int> _CLINICA;
		
		private EntitySet<TAlertas> _TAlertas;
		
		private EntityRef<CLINICA> _CLINICA1;
		
		private EntityRef<Estado> _Estado1;
		
		private EntityRef<PERFIL> _PERFIL1;
		
		private EntityRef<Tipo_EMO> _Tipo_EMO;
		
		private EntityRef<Trabajador> _Trabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdExamenChanging(int value);
    partial void OnIdExamenChanged();
    partial void OnIdTrabajadorChanging(string value);
    partial void OnIdTrabajadorChanged();
    partial void OnTipoExamenChanging(System.Nullable<int> value);
    partial void OnTipoExamenChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnEstadoChanging(System.Nullable<int> value);
    partial void OnEstadoChanged();
    partial void OnOdontologiaChanging(string value);
    partial void OnOdontologiaChanged();
    partial void OnPresion_ArterialChanging(string value);
    partial void OnPresion_ArterialChanged();
    partial void OnEKGChanging(string value);
    partial void OnEKGChanged();
    partial void OnPsicologicoChanging(string value);
    partial void OnPsicologicoChanged();
    partial void OnEsfuerzoChanging(string value);
    partial void OnEsfuerzoChanged();
    partial void OnPSAChanging(System.Nullable<int> value);
    partial void OnPSAChanged();
    partial void OnOrinaChanging(string value);
    partial void OnOrinaChanged();
    partial void OnHIVChanging(bool value);
    partial void OnHIVChanged();
    partial void OnCocainaChanging(bool value);
    partial void OnCocainaChanged();
    partial void OnMarihuanaChanging(bool value);
    partial void OnMarihuanaChanged();
    partial void OnPsicosensometricoChanging(System.Nullable<int> value);
    partial void OnPsicosensometricoChanged();
    partial void OnErgonometriaChanging(System.Nullable<int> value);
    partial void OnErgonometriaChanged();
    partial void OnAsceenso_a_grandes_altitudesChanging(System.Nullable<int> value);
    partial void OnAsceenso_a_grandes_altitudesChanged();
    partial void OnTrabajos_de_RiesgoChanging(System.Nullable<int> value);
    partial void OnTrabajos_de_RiesgoChanged();
    partial void OnPERFILChanging(System.Nullable<int> value);
    partial void OnPERFILChanged();
    partial void OnRESTRICCIONESChanging(string value);
    partial void OnRESTRICCIONESChanged();
    partial void OnOBSERVACIONESChanging(string value);
    partial void OnOBSERVACIONESChanged();
    partial void OnCLINICAChanging(System.Nullable<int> value);
    partial void OnCLINICAChanged();
    #endregion
		
		public Examen()
		{
			this._TAlertas = new EntitySet<TAlertas>(new Action<TAlertas>(this.attach_TAlertas), new Action<TAlertas>(this.detach_TAlertas));
			this._CLINICA1 = default(EntityRef<CLINICA>);
			this._Estado1 = default(EntityRef<Estado>);
			this._PERFIL1 = default(EntityRef<PERFIL>);
			this._Tipo_EMO = default(EntityRef<Tipo_EMO>);
			this._Trabajador = default(EntityRef<Trabajador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExamen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdExamen
		{
			get
			{
				return this._IdExamen;
			}
			set
			{
				if ((this._IdExamen != value))
				{
					this.OnIdExamenChanging(value);
					this.SendPropertyChanging();
					this._IdExamen = value;
					this.SendPropertyChanged("IdExamen");
					this.OnIdExamenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrabajador", DbType="NVarChar(255)")]
		public string IdTrabajador
		{
			get
			{
				return this._IdTrabajador;
			}
			set
			{
				if ((this._IdTrabajador != value))
				{
					if (this._Trabajador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTrabajadorChanging(value);
					this.SendPropertyChanging();
					this._IdTrabajador = value;
					this.SendPropertyChanged("IdTrabajador");
					this.OnIdTrabajadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoExamen", DbType="Int")]
		public System.Nullable<int> TipoExamen
		{
			get
			{
				return this._TipoExamen;
			}
			set
			{
				if ((this._TipoExamen != value))
				{
					if (this._Tipo_EMO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoExamenChanging(value);
					this.SendPropertyChanging();
					this._TipoExamen = value;
					this.SendPropertyChanged("TipoExamen");
					this.OnTipoExamenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int")]
		public System.Nullable<int> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estado1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Odontologia", DbType="NVarChar(255)")]
		public string Odontologia
		{
			get
			{
				return this._Odontologia;
			}
			set
			{
				if ((this._Odontologia != value))
				{
					this.OnOdontologiaChanging(value);
					this.SendPropertyChanging();
					this._Odontologia = value;
					this.SendPropertyChanged("Odontologia");
					this.OnOdontologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Presion Arterial]", Storage="_Presion_Arterial", DbType="NVarChar(255)")]
		public string Presion_Arterial
		{
			get
			{
				return this._Presion_Arterial;
			}
			set
			{
				if ((this._Presion_Arterial != value))
				{
					this.OnPresion_ArterialChanging(value);
					this.SendPropertyChanging();
					this._Presion_Arterial = value;
					this.SendPropertyChanged("Presion_Arterial");
					this.OnPresion_ArterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKG", DbType="NVarChar(255)")]
		public string EKG
		{
			get
			{
				return this._EKG;
			}
			set
			{
				if ((this._EKG != value))
				{
					this.OnEKGChanging(value);
					this.SendPropertyChanging();
					this._EKG = value;
					this.SendPropertyChanged("EKG");
					this.OnEKGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psicologico", DbType="NVarChar(255)")]
		public string Psicologico
		{
			get
			{
				return this._Psicologico;
			}
			set
			{
				if ((this._Psicologico != value))
				{
					this.OnPsicologicoChanging(value);
					this.SendPropertyChanging();
					this._Psicologico = value;
					this.SendPropertyChanged("Psicologico");
					this.OnPsicologicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esfuerzo", DbType="NVarChar(255)")]
		public string Esfuerzo
		{
			get
			{
				return this._Esfuerzo;
			}
			set
			{
				if ((this._Esfuerzo != value))
				{
					this.OnEsfuerzoChanging(value);
					this.SendPropertyChanging();
					this._Esfuerzo = value;
					this.SendPropertyChanged("Esfuerzo");
					this.OnEsfuerzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSA", DbType="Int")]
		public System.Nullable<int> PSA
		{
			get
			{
				return this._PSA;
			}
			set
			{
				if ((this._PSA != value))
				{
					this.OnPSAChanging(value);
					this.SendPropertyChanging();
					this._PSA = value;
					this.SendPropertyChanged("PSA");
					this.OnPSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orina", DbType="NVarChar(255)")]
		public string Orina
		{
			get
			{
				return this._Orina;
			}
			set
			{
				if ((this._Orina != value))
				{
					this.OnOrinaChanging(value);
					this.SendPropertyChanging();
					this._Orina = value;
					this.SendPropertyChanged("Orina");
					this.OnOrinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIV", DbType="Bit NOT NULL")]
		public bool HIV
		{
			get
			{
				return this._HIV;
			}
			set
			{
				if ((this._HIV != value))
				{
					this.OnHIVChanging(value);
					this.SendPropertyChanging();
					this._HIV = value;
					this.SendPropertyChanged("HIV");
					this.OnHIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cocaina", DbType="Bit NOT NULL")]
		public bool Cocaina
		{
			get
			{
				return this._Cocaina;
			}
			set
			{
				if ((this._Cocaina != value))
				{
					this.OnCocainaChanging(value);
					this.SendPropertyChanging();
					this._Cocaina = value;
					this.SendPropertyChanged("Cocaina");
					this.OnCocainaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marihuana", DbType="Bit NOT NULL")]
		public bool Marihuana
		{
			get
			{
				return this._Marihuana;
			}
			set
			{
				if ((this._Marihuana != value))
				{
					this.OnMarihuanaChanging(value);
					this.SendPropertyChanging();
					this._Marihuana = value;
					this.SendPropertyChanged("Marihuana");
					this.OnMarihuanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psicosensometrico", DbType="Int")]
		public System.Nullable<int> Psicosensometrico
		{
			get
			{
				return this._Psicosensometrico;
			}
			set
			{
				if ((this._Psicosensometrico != value))
				{
					this.OnPsicosensometricoChanging(value);
					this.SendPropertyChanging();
					this._Psicosensometrico = value;
					this.SendPropertyChanged("Psicosensometrico");
					this.OnPsicosensometricoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ergonometria", DbType="Int")]
		public System.Nullable<int> Ergonometria
		{
			get
			{
				return this._Ergonometria;
			}
			set
			{
				if ((this._Ergonometria != value))
				{
					this.OnErgonometriaChanging(value);
					this.SendPropertyChanging();
					this._Ergonometria = value;
					this.SendPropertyChanged("Ergonometria");
					this.OnErgonometriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Asceenso a grandes altitudes]", Storage="_Asceenso_a_grandes_altitudes", DbType="Int")]
		public System.Nullable<int> Asceenso_a_grandes_altitudes
		{
			get
			{
				return this._Asceenso_a_grandes_altitudes;
			}
			set
			{
				if ((this._Asceenso_a_grandes_altitudes != value))
				{
					this.OnAsceenso_a_grandes_altitudesChanging(value);
					this.SendPropertyChanging();
					this._Asceenso_a_grandes_altitudes = value;
					this.SendPropertyChanged("Asceenso_a_grandes_altitudes");
					this.OnAsceenso_a_grandes_altitudesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Trabajos de Riesgo]", Storage="_Trabajos_de_Riesgo", DbType="Int")]
		public System.Nullable<int> Trabajos_de_Riesgo
		{
			get
			{
				return this._Trabajos_de_Riesgo;
			}
			set
			{
				if ((this._Trabajos_de_Riesgo != value))
				{
					this.OnTrabajos_de_RiesgoChanging(value);
					this.SendPropertyChanging();
					this._Trabajos_de_Riesgo = value;
					this.SendPropertyChanged("Trabajos_de_Riesgo");
					this.OnTrabajos_de_RiesgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERFIL", DbType="Int")]
		public System.Nullable<int> PERFIL
		{
			get
			{
				return this._PERFIL;
			}
			set
			{
				if ((this._PERFIL != value))
				{
					if (this._PERFIL1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPERFILChanging(value);
					this.SendPropertyChanging();
					this._PERFIL = value;
					this.SendPropertyChanged("PERFIL");
					this.OnPERFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESTRICCIONES", DbType="NVarChar(MAX)")]
		public string RESTRICCIONES
		{
			get
			{
				return this._RESTRICCIONES;
			}
			set
			{
				if ((this._RESTRICCIONES != value))
				{
					this.OnRESTRICCIONESChanging(value);
					this.SendPropertyChanging();
					this._RESTRICCIONES = value;
					this.SendPropertyChanged("RESTRICCIONES");
					this.OnRESTRICCIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONES", DbType="NVarChar(MAX)")]
		public string OBSERVACIONES
		{
			get
			{
				return this._OBSERVACIONES;
			}
			set
			{
				if ((this._OBSERVACIONES != value))
				{
					this.OnOBSERVACIONESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONES = value;
					this.SendPropertyChanged("OBSERVACIONES");
					this.OnOBSERVACIONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLINICA", DbType="Int")]
		public System.Nullable<int> CLINICA
		{
			get
			{
				return this._CLINICA;
			}
			set
			{
				if ((this._CLINICA != value))
				{
					if (this._CLINICA1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLINICAChanging(value);
					this.SendPropertyChanging();
					this._CLINICA = value;
					this.SendPropertyChanged("CLINICA");
					this.OnCLINICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Examen_TAlertas", Storage="_TAlertas", ThisKey="IdExamen", OtherKey="Examen")]
		public EntitySet<TAlertas> TAlertas
		{
			get
			{
				return this._TAlertas;
			}
			set
			{
				this._TAlertas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLINICA_Examen", Storage="_CLINICA1", ThisKey="CLINICA", OtherKey="Id", IsForeignKey=true)]
		public CLINICA CLINICA1
		{
			get
			{
				return this._CLINICA1.Entity;
			}
			set
			{
				CLINICA previousValue = this._CLINICA1.Entity;
				if (((previousValue != value) 
							|| (this._CLINICA1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLINICA1.Entity = null;
						previousValue.Examen.Remove(this);
					}
					this._CLINICA1.Entity = value;
					if ((value != null))
					{
						value.Examen.Add(this);
						this._CLINICA = value.Id;
					}
					else
					{
						this._CLINICA = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLINICA1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Examen", Storage="_Estado1", ThisKey="Estado", OtherKey="IdEstado", IsForeignKey=true)]
		public Estado Estado1
		{
			get
			{
				return this._Estado1.Entity;
			}
			set
			{
				Estado previousValue = this._Estado1.Entity;
				if (((previousValue != value) 
							|| (this._Estado1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado1.Entity = null;
						previousValue.Examen.Remove(this);
					}
					this._Estado1.Entity = value;
					if ((value != null))
					{
						value.Examen.Add(this);
						this._Estado = value.IdEstado;
					}
					else
					{
						this._Estado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERFIL_Examen", Storage="_PERFIL1", ThisKey="PERFIL", OtherKey="Id", IsForeignKey=true)]
		public PERFIL PERFIL1
		{
			get
			{
				return this._PERFIL1.Entity;
			}
			set
			{
				PERFIL previousValue = this._PERFIL1.Entity;
				if (((previousValue != value) 
							|| (this._PERFIL1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERFIL1.Entity = null;
						previousValue.Examen.Remove(this);
					}
					this._PERFIL1.Entity = value;
					if ((value != null))
					{
						value.Examen.Add(this);
						this._PERFIL = value.Id;
					}
					else
					{
						this._PERFIL = default(Nullable<int>);
					}
					this.SendPropertyChanged("PERFIL1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_EMO_Examen", Storage="_Tipo_EMO", ThisKey="TipoExamen", OtherKey="IDEmo", IsForeignKey=true)]
		public Tipo_EMO Tipo_EMO
		{
			get
			{
				return this._Tipo_EMO.Entity;
			}
			set
			{
				Tipo_EMO previousValue = this._Tipo_EMO.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_EMO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_EMO.Entity = null;
						previousValue.Examen.Remove(this);
					}
					this._Tipo_EMO.Entity = value;
					if ((value != null))
					{
						value.Examen.Add(this);
						this._TipoExamen = value.IDEmo;
					}
					else
					{
						this._TipoExamen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo_EMO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Examen", Storage="_Trabajador", ThisKey="IdTrabajador", OtherKey="IdTrabajador", IsForeignKey=true)]
		public Trabajador Trabajador
		{
			get
			{
				return this._Trabajador.Entity;
			}
			set
			{
				Trabajador previousValue = this._Trabajador.Entity;
				if (((previousValue != value) 
							|| (this._Trabajador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajador.Entity = null;
						previousValue.Examen.Remove(this);
					}
					this._Trabajador.Entity = value;
					if ((value != null))
					{
						value.Examen.Add(this);
						this._IdTrabajador = value.IdTrabajador;
					}
					else
					{
						this._IdTrabajador = default(string);
					}
					this.SendPropertyChanged("Trabajador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAlertas(TAlertas entity)
		{
			this.SendPropertyChanging();
			entity.Examen1 = this;
		}
		
		private void detach_TAlertas(TAlertas entity)
		{
			this.SendPropertyChanging();
			entity.Examen1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamenReferencia")]
	public partial class ExamenReferencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamenReferencia1;
		
		private string _Descripcion;
		
		private EntitySet<TAlertas> _TAlertas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamenReferencia1Changing(int value);
    partial void OnExamenReferencia1Changed();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public ExamenReferencia()
		{
			this._TAlertas = new EntitySet<TAlertas>(new Action<TAlertas>(this.attach_TAlertas), new Action<TAlertas>(this.detach_TAlertas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExamenReferencia", Storage="_ExamenReferencia1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExamenReferencia1
		{
			get
			{
				return this._ExamenReferencia1;
			}
			set
			{
				if ((this._ExamenReferencia1 != value))
				{
					this.OnExamenReferencia1Changing(value);
					this.SendPropertyChanging();
					this._ExamenReferencia1 = value;
					this.SendPropertyChanged("ExamenReferencia1");
					this.OnExamenReferencia1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(255)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamenReferencia_TAlertas", Storage="_TAlertas", ThisKey="ExamenReferencia1", OtherKey="ExamenReferencia")]
		public EntitySet<TAlertas> TAlertas
		{
			get
			{
				return this._TAlertas;
			}
			set
			{
				this._TAlertas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAlertas(TAlertas entity)
		{
			this.SendPropertyChanging();
			entity.ExamenReferencia1 = this;
		}
		
		private void detach_TAlertas(TAlertas entity)
		{
			this.SendPropertyChanging();
			entity.ExamenReferencia1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERFIL")]
	public partial class PERFIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TIPO;
		
		private EntitySet<Examen> _Examen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTIPOChanging(string value);
    partial void OnTIPOChanged();
    #endregion
		
		public PERFIL()
		{
			this._Examen = new EntitySet<Examen>(new Action<Examen>(this.attach_Examen), new Action<Examen>(this.detach_Examen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO", DbType="NVarChar(255)")]
		public string TIPO
		{
			get
			{
				return this._TIPO;
			}
			set
			{
				if ((this._TIPO != value))
				{
					this.OnTIPOChanging(value);
					this.SendPropertyChanging();
					this._TIPO = value;
					this.SendPropertyChanged("TIPO");
					this.OnTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERFIL_Examen", Storage="_Examen", ThisKey="Id", OtherKey="PERFIL")]
		public EntitySet<Examen> Examen
		{
			get
			{
				return this._Examen;
			}
			set
			{
				this._Examen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.PERFIL1 = this;
		}
		
		private void detach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.PERFIL1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sexo")]
	public partial class Sexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSex;
		
		private string _Sexo1;
		
		private EntitySet<Trabajador> _Trabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSexChanging(int value);
    partial void OnIDSexChanged();
    partial void OnSexo1Changing(string value);
    partial void OnSexo1Changed();
    #endregion
		
		public Sexo()
		{
			this._Trabajador = new EntitySet<Trabajador>(new Action<Trabajador>(this.attach_Trabajador), new Action<Trabajador>(this.detach_Trabajador));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSex
		{
			get
			{
				return this._IDSex;
			}
			set
			{
				if ((this._IDSex != value))
				{
					this.OnIDSexChanging(value);
					this.SendPropertyChanging();
					this._IDSex = value;
					this.SendPropertyChanged("IDSex");
					this.OnIDSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sexo", Storage="_Sexo1", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Sexo1
		{
			get
			{
				return this._Sexo1;
			}
			set
			{
				if ((this._Sexo1 != value))
				{
					this.OnSexo1Changing(value);
					this.SendPropertyChanging();
					this._Sexo1 = value;
					this.SendPropertyChanged("Sexo1");
					this.OnSexo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Trabajador", Storage="_Trabajador", ThisKey="IDSex", OtherKey="Sexo")]
		public EntitySet<Trabajador> Trabajador
		{
			get
			{
				return this._Trabajador;
			}
			set
			{
				this._Trabajador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trabajador(Trabajador entity)
		{
			this.SendPropertyChanging();
			entity.Sexo1 = this;
		}
		
		private void detach_Trabajador(Trabajador entity)
		{
			this.SendPropertyChanging();
			entity.Sexo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAlertas")]
	public partial class TAlertas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAlerta;
		
		private System.Nullable<int> _ExamenReferencia;
		
		private System.Nullable<int> _Examen;
		
		private string _Detalle;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntityRef<Examen> _Examen1;
		
		private EntityRef<ExamenReferencia> _ExamenReferencia1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAlertaChanging(int value);
    partial void OnIdAlertaChanged();
    partial void OnExamenReferenciaChanging(System.Nullable<int> value);
    partial void OnExamenReferenciaChanged();
    partial void OnExamenChanging(System.Nullable<int> value);
    partial void OnExamenChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public TAlertas()
		{
			this._Examen1 = default(EntityRef<Examen>);
			this._ExamenReferencia1 = default(EntityRef<ExamenReferencia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlerta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdAlerta
		{
			get
			{
				return this._IdAlerta;
			}
			set
			{
				if ((this._IdAlerta != value))
				{
					this.OnIdAlertaChanging(value);
					this.SendPropertyChanging();
					this._IdAlerta = value;
					this.SendPropertyChanged("IdAlerta");
					this.OnIdAlertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamenReferencia", DbType="Int")]
		public System.Nullable<int> ExamenReferencia
		{
			get
			{
				return this._ExamenReferencia;
			}
			set
			{
				if ((this._ExamenReferencia != value))
				{
					if (this._ExamenReferencia1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamenReferenciaChanging(value);
					this.SendPropertyChanging();
					this._ExamenReferencia = value;
					this.SendPropertyChanged("ExamenReferencia");
					this.OnExamenReferenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Examen", DbType="Int")]
		public System.Nullable<int> Examen
		{
			get
			{
				return this._Examen;
			}
			set
			{
				if ((this._Examen != value))
				{
					if (this._Examen1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamenChanging(value);
					this.SendPropertyChanging();
					this._Examen = value;
					this.SendPropertyChanged("Examen");
					this.OnExamenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="NVarChar(255)")]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Examen_TAlertas", Storage="_Examen1", ThisKey="Examen", OtherKey="IdExamen", IsForeignKey=true)]
		public Examen Examen1
		{
			get
			{
				return this._Examen1.Entity;
			}
			set
			{
				Examen previousValue = this._Examen1.Entity;
				if (((previousValue != value) 
							|| (this._Examen1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Examen1.Entity = null;
						previousValue.TAlertas.Remove(this);
					}
					this._Examen1.Entity = value;
					if ((value != null))
					{
						value.TAlertas.Add(this);
						this._Examen = value.IdExamen;
					}
					else
					{
						this._Examen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Examen1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamenReferencia_TAlertas", Storage="_ExamenReferencia1", ThisKey="ExamenReferencia", OtherKey="ExamenReferencia1", IsForeignKey=true)]
		public ExamenReferencia ExamenReferencia1
		{
			get
			{
				return this._ExamenReferencia1.Entity;
			}
			set
			{
				ExamenReferencia previousValue = this._ExamenReferencia1.Entity;
				if (((previousValue != value) 
							|| (this._ExamenReferencia1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamenReferencia1.Entity = null;
						previousValue.TAlertas.Remove(this);
					}
					this._ExamenReferencia1.Entity = value;
					if ((value != null))
					{
						value.TAlertas.Add(this);
						this._ExamenReferencia = value.ExamenReferencia1;
					}
					else
					{
						this._ExamenReferencia = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamenReferencia1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_EMO")]
	public partial class Tipo_EMO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEmo;
		
		private string _Tipo;
		
		private EntitySet<Examen> _Examen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmoChanging(int value);
    partial void OnIDEmoChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Tipo_EMO()
		{
			this._Examen = new EntitySet<Examen>(new Action<Examen>(this.attach_Examen), new Action<Examen>(this.detach_Examen));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEmo
		{
			get
			{
				return this._IDEmo;
			}
			set
			{
				if ((this._IDEmo != value))
				{
					this.OnIDEmoChanging(value);
					this.SendPropertyChanging();
					this._IDEmo = value;
					this.SendPropertyChanged("IDEmo");
					this.OnIDEmoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_EMO_Examen", Storage="_Examen", ThisKey="IDEmo", OtherKey="TipoExamen")]
		public EntitySet<Examen> Examen
		{
			get
			{
				return this._Examen;
			}
			set
			{
				this._Examen.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_EMO = this;
		}
		
		private void detach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_EMO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trabajador")]
	public partial class Trabajador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdTrabajador;
		
		private string _Fotocheck;
		
		private string _DNI;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _NombreP;
		
		private string _NombreS;
		
		private string _Area;
		
		private string _PuestodeTrabajo;
		
		private System.Nullable<System.DateTime> _FechaNacimiento;
		
		private System.Nullable<int> _Edad;
		
		private System.Nullable<int> _Sexo;
		
		private System.Nullable<int> _EstadoCivil;
		
		private System.Nullable<int> _Peso;
		
		private System.Nullable<double> _Talla;
		
		private EntitySet<Examen> _Examen;
		
		private EntityRef<EstadCiv> _EstadCiv;
		
		private EntityRef<Sexo> _Sexo1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTrabajadorChanging(string value);
    partial void OnIdTrabajadorChanged();
    partial void OnFotocheckChanging(string value);
    partial void OnFotocheckChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnNombrePChanging(string value);
    partial void OnNombrePChanged();
    partial void OnNombreSChanging(string value);
    partial void OnNombreSChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnPuestodeTrabajoChanging(string value);
    partial void OnPuestodeTrabajoChanged();
    partial void OnFechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaNacimientoChanged();
    partial void OnEdadChanging(System.Nullable<int> value);
    partial void OnEdadChanged();
    partial void OnSexoChanging(System.Nullable<int> value);
    partial void OnSexoChanged();
    partial void OnEstadoCivilChanging(System.Nullable<int> value);
    partial void OnEstadoCivilChanged();
    partial void OnPesoChanging(System.Nullable<int> value);
    partial void OnPesoChanged();
    partial void OnTallaChanging(System.Nullable<double> value);
    partial void OnTallaChanged();
    #endregion
		
		public Trabajador()
		{
			this._Examen = new EntitySet<Examen>(new Action<Examen>(this.attach_Examen), new Action<Examen>(this.detach_Examen));
			this._EstadCiv = default(EntityRef<EstadCiv>);
			this._Sexo1 = default(EntityRef<Sexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrabajador", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdTrabajador
		{
			get
			{
				return this._IdTrabajador;
			}
			set
			{
				if ((this._IdTrabajador != value))
				{
					this.OnIdTrabajadorChanging(value);
					this.SendPropertyChanging();
					this._IdTrabajador = value;
					this.SendPropertyChanged("IdTrabajador");
					this.OnIdTrabajadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fotocheck", DbType="NVarChar(255)")]
		public string Fotocheck
		{
			get
			{
				return this._Fotocheck;
			}
			set
			{
				if ((this._Fotocheck != value))
				{
					this.OnFotocheckChanging(value);
					this.SendPropertyChanging();
					this._Fotocheck = value;
					this.SendPropertyChanged("Fotocheck");
					this.OnFotocheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="NVarChar(255)")]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(255)")]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(255)")]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreP", DbType="NVarChar(255)")]
		public string NombreP
		{
			get
			{
				return this._NombreP;
			}
			set
			{
				if ((this._NombreP != value))
				{
					this.OnNombrePChanging(value);
					this.SendPropertyChanging();
					this._NombreP = value;
					this.SendPropertyChanged("NombreP");
					this.OnNombrePChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreS", DbType="NVarChar(255)")]
		public string NombreS
		{
			get
			{
				return this._NombreS;
			}
			set
			{
				if ((this._NombreS != value))
				{
					this.OnNombreSChanging(value);
					this.SendPropertyChanging();
					this._NombreS = value;
					this.SendPropertyChanged("NombreS");
					this.OnNombreSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PuestodeTrabajo", DbType="NVarChar(255)")]
		public string PuestodeTrabajo
		{
			get
			{
				return this._PuestodeTrabajo;
			}
			set
			{
				if ((this._PuestodeTrabajo != value))
				{
					this.OnPuestodeTrabajoChanging(value);
					this.SendPropertyChanging();
					this._PuestodeTrabajo = value;
					this.SendPropertyChanged("PuestodeTrabajo");
					this.OnPuestodeTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int")]
		public System.Nullable<int> Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Int")]
		public System.Nullable<int> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					if (this._Sexo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoCivil", DbType="Int")]
		public System.Nullable<int> EstadoCivil
		{
			get
			{
				return this._EstadoCivil;
			}
			set
			{
				if ((this._EstadoCivil != value))
				{
					if (this._EstadCiv.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._EstadoCivil = value;
					this.SendPropertyChanged("EstadoCivil");
					this.OnEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso", DbType="Int")]
		public System.Nullable<int> Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Talla", DbType="Float")]
		public System.Nullable<double> Talla
		{
			get
			{
				return this._Talla;
			}
			set
			{
				if ((this._Talla != value))
				{
					this.OnTallaChanging(value);
					this.SendPropertyChanging();
					this._Talla = value;
					this.SendPropertyChanged("Talla");
					this.OnTallaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Examen", Storage="_Examen", ThisKey="IdTrabajador", OtherKey="IdTrabajador")]
		public EntitySet<Examen> Examen
		{
			get
			{
				return this._Examen;
			}
			set
			{
				this._Examen.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadCiv_Trabajador", Storage="_EstadCiv", ThisKey="EstadoCivil", OtherKey="IdEC", IsForeignKey=true)]
		public EstadCiv EstadCiv
		{
			get
			{
				return this._EstadCiv.Entity;
			}
			set
			{
				EstadCiv previousValue = this._EstadCiv.Entity;
				if (((previousValue != value) 
							|| (this._EstadCiv.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadCiv.Entity = null;
						previousValue.Trabajador.Remove(this);
					}
					this._EstadCiv.Entity = value;
					if ((value != null))
					{
						value.Trabajador.Add(this);
						this._EstadoCivil = value.IdEC;
					}
					else
					{
						this._EstadoCivil = default(Nullable<int>);
					}
					this.SendPropertyChanged("EstadCiv");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Trabajador", Storage="_Sexo1", ThisKey="Sexo", OtherKey="IDSex", IsForeignKey=true)]
		public Sexo Sexo1
		{
			get
			{
				return this._Sexo1.Entity;
			}
			set
			{
				Sexo previousValue = this._Sexo1.Entity;
				if (((previousValue != value) 
							|| (this._Sexo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexo1.Entity = null;
						previousValue.Trabajador.Remove(this);
					}
					this._Sexo1.Entity = value;
					if ((value != null))
					{
						value.Trabajador.Add(this);
						this._Sexo = value.IDSex;
					}
					else
					{
						this._Sexo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sexo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = this;
		}
		
		private void detach_Examen(Examen entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = null;
		}
	}
}
#pragma warning restore 1591
